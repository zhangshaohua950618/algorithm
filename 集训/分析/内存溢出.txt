while(!q.empty()){
		currentNode = q.front() ;
		q.pop() ;
		if( Judge(currentNode)){
			cout << currentNode.length << endl ;
			for( i = 0 ; i  < currentNode.length ; i++ )
			cout << m[currentNode.path[i]] ;
			cout << endl ;
			return 0 ;
		}
		for( i = 1 ; i <= 3 ; i++ ){
				Translate( currentNode , i );
				q.push( nextNode ) ;
		}
}